{"version":3,"sources":["../../../src/main/routers/user.js"],"names":["ObjectId","require","Types","UserRouter","app","mlanghku","init","mongoose","connect","useNewUrlParser","db","connection","get","req","res","next","id","headers","pw","console","log","User","find","err","user","json","result","Router"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;;;;;;;;;;;;;AAFA,IAAIA,WAAWC,QAAQ,UAAR,EAAoBC,KAApB,CAA0BF,QAAzC;;IAIMG,U;;;AAEJ,sBAAYC,GAAZ,EAAiBC,QAAjB,EAA0B;AAAA;;AAAA,wHAClBD,GADkB;;AAExB,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKE,IAAL;AAHwB;AAIzB;;;;2BAEK;AAAA;;AACJ,UAAMF,MAAM,KAAKA,GAAjB;AACAG,yBAASC,OAAT,CAAiB,iCAAjB,EAAoD,EAAEC,iBAAiB,IAAnB,EAApD;AACA,UAAIC,KAAKH,mBAASI,UAAlB;;AAEAP,UAAIQ,GAAJ,CAAQ,cAAR;AAAA,2EAAwB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChBC,oBADgB,GACXH,IAAII,OAAJ,CAAYD,EADD;AAEhBE,oBAFgB,GAEXL,IAAII,OAAJ,CAAYC,EAFD;;AAGtBC,0BAAQC,GAAR,CAAYJ,KAAK,GAAL,GAAWE,EAAvB;;AAHsB;AAAA,yBAMFG,eAAKC,IAAL,CAAUN,EAAV,EAAcE,EAAd,CANE;;AAAA;AAAA;AAAA;AAMrBK,qBANqB;AAMhBC,sBANgB;;AAAA,wBAOnBD,OAAO,CAACC,IAPW;AAAA;AAAA;AAAA;;AAAA,mDAOGV,IAAIW,IAAJ,CAAS,EAAEC,QAAQ,QAAV,EAAT,CAPH;;AAAA;AAAA,mDASfZ,IAAIW,IAAJ,CAAS,EAAEC,QAAQ,SAAV,EAAqBF,MAAMA,IAA3B,EAAT,CATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxB;;AAAA;AAAA;AAAA;AAAA;AAcD;;;;EA3BsBG,gB;;kBAgCVxB,U","file":"user.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nvar ObjectId = require('mongoose').Types.ObjectId;\r\n\r\nimport User from '../../models/User';\r\n\r\nclass UserRouter extends Router {\r\n\r\n  constructor(app, mlanghku){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/sitetracker', { useNewUrlParser: true });\r\n    var db = mongoose.connection;\r\n\r\n    app.get('/user/login/', async (req, res, next)=>{\r\n      const id = req.headers.id;\r\n      const pw = req.headers.pw;\r\n      console.log(id + ' ' + pw);\r\n\r\n      var err, user;\r\n      [err, user] = await User.find(id, pw);\r\n      if(err || !user){ return res.json({ result: 'failed' }) }\r\n\r\n      return res.json({ result: 'succeed', user: user })\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default UserRouter;\r\n"]}