{"version":3,"sources":["../../src/main/createApp.js"],"names":["CreateApp","appName","port","useHttps","devMode","createApp","temp","path","join","__dirname","storage","storageConfig","multer","diskStorage","destination","req","file","cb","filename","Date","now","originalname","upload","app","httpsOptions","cert","fs","readFileSync","key","ca","server","https","createServer","http","use","exposeHeaders","bodyParser","json","limit","urlencoded","extended","express","static","set","AppRouter","UserRouter","ReportRouter","listen","console","log","address"],"mappings":"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","file":"createApp.js","sourcesContent":["import https from 'https';\r\nimport http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nimport AppRouter from './routers/app.js';\r\nimport UserRouter from './routers/user.js';\r\nimport ReportRouter from './routers/report.js';\r\n\r\nclass CreateApp {\r\n\r\n  constructor(appName, port, useHttps, devMode){\r\n    this.createApp(appName, port, useHttps, devMode);\r\n  }\r\n\r\n  createApp(appName, port, useHttps, devMode){\r\n    const temp = path.join(__dirname, '../../../data/temp/');\r\n    const storage = path.join(__dirname, '../../../data/storage/');\r\n\r\n    var storageConfig = multer.diskStorage({\r\n      destination: (req, file, cb) => {\r\n        cb(null, temp);\r\n      },\r\n      filename: (req, file, cb) => {\r\n        //console.log(file)\r\n        cb(null, Date.now() + '-' + file.originalname);\r\n      }\r\n    });\r\n    var upload = multer({ storage: storageConfig });\r\n\r\n    const app = express();\r\n    if(useHttps){\r\n      const httpsOptions = {\r\n        cert: fs.readFileSync(path.join(__dirname, '../ssl', devMode? 'dev-server.crt':'server.crt' )),\r\n        key: fs.readFileSync(path.join(__dirname, '../ssl',  devMode? 'dev-server.key':'server.key' )),\r\n        ca: fs.readFileSync(path.join(__dirname, '../ssl', devMode? 'dev-server-ca.crt':'server-ca.crt' ))\r\n      }\r\n      app.server = https.createServer(httpsOptions, app);\r\n    }else{\r\n      app.server = http.createServer(app);\r\n    }\r\n\r\n    app.use(morgan('dev'));\r\n    app.use(cors({exposeHeaders: \"*\"}));\r\n    app.use(bodyParser.json({limit: '50mb'}));\r\n    app.use(bodyParser.urlencoded({extended: false}));\r\n    app.use(express.static(path.join(__dirname,'../../' + appName + '/')));\r\n\r\n    app.set('root',__dirname);\r\n    app.set('config', storageConfig);\r\n    app.set('upload',upload);\r\n    app.set('temp',temp);\r\n    app.set('storage',storage);\r\n\r\n    new AppRouter(app);\r\n    new UserRouter(app);\r\n    new ReportRouter(app);\r\n    \r\n    app.server.listen(port, ()=>{console.log('App is running on port ' + app.server.address().port);});\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default CreateApp;\r\n"]}